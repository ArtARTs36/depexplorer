name: testing

on:
  push:

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.get-modules.outputs.modules }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: printenv
        run: printenv | grep GITHUB_
      - name: Get GO modules
        uses: artarts36/go-modules-action@master
        id: get-modules

  code-lint:
    name: code-lint
    runs-on: ubuntu-latest
    needs: detect-modules

    strategy:
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4 # action page: <https://github.com/actions/setup-go>
        with:
          go-version: stable
          cache-dependency-path: ${{ matrix.module.dir }}/go.sum

      - name: Install Go dependencies
        run: cd ${{ matrix.module.dir }} && go mod download

      - name: Run linter
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.60.3
          only-new-issues: false # show only new issues if it's a pull request
          args: -v --timeout=10m --out-format=colored-line-number

  unit-test:
    name: unit-test
    runs-on: ubuntu-latest
    needs: detect-modules

    strategy:
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4 # action page: <https://github.com/actions/setup-go>
        with:
          go-version: stable
          cache-dependency-path: ${{ matrix.module.dir }}/go.sum

      - name: Install Go dependencies
        run: echo $PWD; echo $GITHUB_WORKSPACE; ls -a .; ls -a ..; cd ${{ matrix.module.dir }} && go mod download

      - name: Run tests
        run: cd ${{ matrix.module.dir }} && go test ./...
